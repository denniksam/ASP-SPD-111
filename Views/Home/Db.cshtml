@{
    ViewData["Title"] = "Db";
}

<h1 class="display-4">Робота з базами даних</h1>
<p>
    Бази даних, по відношенню до веб-сервера із сайтом, можна поділити
    на локальні та віддалені. Локальні розміщуються на тому ж ресурсі,
    віддалені - на іншому. Робота з локальними БД простіше налаштовується
    і є більш швидкою, але не дає змоги переносити веб-сервер або
    публікувати сайт на сторонньому хостінгу.
</p>
<p>
    В ASP, як і у .NET поширена практика роботи з БД засобами EntityFramework
    Для його налаштування встановлюємо додаткові модулі (NuGet)
</p>
<ul>
    <li>Microsoft.EntityFrameworkCore - ядро фреймворка</li>
    <li>Microsoft.EntityFrameworkCore.Tools - засоби для командного рядка
        (міграції)
    </li>
    <li>Pomelo.EntityFrameworkCore.MySql - драйвери для роботи з MySql</li>
</ul>
<h2>Підключення</h2>
<p>
    Конфігурація. Паролі до віддалених БД не можна передавати у відкриті
    репозиторії. Зокрема, PlanetScale автоматично скасовує пароль, якщо
    знаходить його у такому. Для запобігання цьому створюється окремий
    файл конфігурації, який вилучається з репозиторію.
</p>
<p>
    При роботі кількох проєктів з однією БД можуть виникати конфлікти,
    коли різні проєкти вживають однакові імена для своїх таблиць.
    Для їх розділення застосовується принцип схем (якщо їх підтримує БД)
    або префіксний принцип - коли до імені таблиці додається префікс,
    що характеризує проєкт. При роботі з EntityFramework слід не забути, 
    що він додатково використовує таблицю з історією міграцій, для якої
    теж треба вказати схему.
</p>
<h2>Міграції</h2>
<p>
    Міграції (у EntityFramework) - схожі на коміти (Git) ресурси, які
    дозволяють повертатись до попередніх версій БД або, навпаки, 
    оновлювати її. Після опису і налаштування контексту даних і підключення
    міграції створюються засобами командного рядку (Package Manager Console) 
    [Tools -> NuGet PM -> PM Console]<br/>
    <code>Add-Migration Initial</code><br />
    Після успішного створення міграції буде відкрите вікно з її кодом,
    у випадку з обмеженим доступом (роллю користувача) слід закоментувати
    або видалити інструкцію <br />
    <code>migrationBuilder.AlterDatabase()</code><br />
    Після цього застосовуємо міграцію, у РМ консоль вводимо команду
    <code>Update-Database</code>
</p>