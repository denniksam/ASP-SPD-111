@{
    ViewData["Title"] = "Razor";
}
<h1 class="display-4">Синтаксис Razor</h1>
<p>
    Razor - технологія впровадження у HTML можливостей мови програмування
    (C#). Умовно, можливості Razor поділяються на вирази та інструкції.
    Основу синтаксису складає символ &commat; через що до HTML цей символ
    слід вставляти через сутність <b>&amp;commat;</b>.
    Однак, Razor розпізнає адреси E-mail, у них цей символ
    замінювати не треба: user@mail.net
</p>
<p>
    Вирази - мають результат. Razor-вирази його відображають.
    Якщо вираз простий, наприклад, виведення змінної, то
    додаткових конструкцій не треба, просто зазначається
    <code>&commat;x</code>, для більш складних вживаються круглі 
    дужки <code>&commat;(2 + 3)</code> @(2 + 3)
</p>
<p>
    Інструкції - без результату, який треба виводити. Інструкції Razor
    беруться у фігурні дужки <code>&commat;{ ... }</code>. У дужках
    всі інструкції слідують синтаксису мови (C#). Змінні, оголошені
    у таких блоках, доступні по cshtml документу. Деякі інструкції
    можна не обмежувати дужками, зокрема
</p>
@{
    int x = 10;
    String str = "Hello";
}
<p>
    умовні конструкції <code>&commat;if</code>
    @if(x < 10)
    {
        int y = x;
        <b>х менший за @y</b>
    }
    else
    {
        <b>х не менший за 10</b>
    }
    У конструкціях такого типу Razor сам намагається визначатись з
    тим, що є інструкцією мови, а що - кодом HTML. Як правило, це
    розпізнається за тегами
</p>
<p>
    Циклічні конструкції <code>&commat;while</code>
    
</p>
<ul>
    @while (str.Length > 0)
    {
        <li>@str</li>
        str = str[..(str.Length - 1)];
    }
</ul>
<p>
    Також у проєкті є "суперглобальні" масиви, за допомогою яких
    можна передавати дані від контролера до представлення.
    ViewData["formController"] = @ViewData["formController"]
</p>
